{"version":3,"file":"1807.bundle.8e84ff2cf7f4fc9c662f.js","mappings":"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","sources":["webpack:///../../../modes/tmtv/src/initToolGroups.js","webpack:///../../../modes/tmtv/src/toolbarButtons.ts","webpack:///../../../modes/tmtv/src/id.js","webpack:///../../../modes/tmtv/src/index.ts","webpack:///../../../modes/tmtv/src/utils/setCrosshairsConfiguration.js","webpack:///../../../modes/tmtv/src/utils/setFusionActiveVolume.js"],"sourcesContent":["export const toolGroupIds = {\r\n  CT: 'ctToolGroup',\r\n  PT: 'ptToolGroup',\r\n  Fusion: 'fusionToolGroup',\r\n  MIP: 'mipToolGroup',\r\n  default: 'default',\r\n};\r\n\r\nfunction _initToolGroups(toolNames, Enums, toolGroupService, commandsManager) {\r\n  const tools = {\r\n    active: [\r\n      {\r\n        toolName: toolNames.WindowLevel,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Pan,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Zoom,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }, { numTouchPoints: 2 }],\r\n      },\r\n      {\r\n        toolName: toolNames.StackScroll,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Wheel }, { numTouchPoints: 3 }],\r\n      },\r\n    ],\r\n    passive: [\r\n      { toolName: toolNames.Length },\r\n      { toolName: toolNames.SegmentBidirectional },\r\n      {\r\n        toolName: toolNames.ArrowAnnotate,\r\n        configuration: {\r\n          getTextCallback: (callback, eventDetails) => {\r\n            commandsManager.runCommand('arrowTextCallback', {\r\n              callback,\r\n              eventDetails,\r\n            });\r\n          },\r\n          changeTextCallback: (data, eventDetails, callback) => {\r\n            commandsManager.runCommand('arrowTextCallback', {\r\n              callback,\r\n              data,\r\n              eventDetails,\r\n            });\r\n          },\r\n        },\r\n      },\r\n      { toolName: toolNames.Bidirectional },\r\n      { toolName: toolNames.DragProbe },\r\n      { toolName: toolNames.Probe },\r\n      { toolName: toolNames.EllipticalROI },\r\n      { toolName: toolNames.RectangleROI },\r\n      { toolName: toolNames.StackScroll },\r\n      { toolName: toolNames.Angle },\r\n      { toolName: toolNames.CobbAngle },\r\n      { toolName: toolNames.Magnify },\r\n      {\r\n        toolName: 'CircularBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'FILL_INSIDE_CIRCLE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'CircularEraser',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'ERASE_INSIDE_CIRCLE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'SphereBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'FILL_INSIDE_SPHERE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'SphereEraser',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'ERASE_INSIDE_SPHERE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'ThresholdCircularBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'THRESHOLD_INSIDE_CIRCLE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'ThresholdSphereBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'THRESHOLD_INSIDE_SPHERE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'ThresholdCircularBrushDynamic',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'THRESHOLD_INSIDE_CIRCLE',\r\n          // preview: {\r\n          //   enabled: true,\r\n          // },\r\n          threshold: {\r\n            isDynamic: true,\r\n            dynamicRadius: 3,\r\n          },\r\n        },\r\n      },\r\n    ],\r\n    enabled: [],\r\n    disabled: [\r\n      {\r\n        toolName: toolNames.Crosshairs,\r\n        configuration: {\r\n          disableOnPassive: true,\r\n          autoPan: {\r\n            enabled: false,\r\n            panSize: 10,\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.CT, tools);\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.PT, {\r\n    active: tools.active,\r\n    passive: [...tools.passive, { toolName: 'RectangleROIStartEndThreshold' }],\r\n    enabled: tools.enabled,\r\n    disabled: tools.disabled,\r\n  });\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.Fusion, tools);\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.default, tools);\r\n\r\n  const mipTools = {\r\n    active: [\r\n      {\r\n        toolName: toolNames.VolumeRotate,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Wheel }],\r\n        configuration: {\r\n          rotateIncrementDegrees: 5,\r\n        },\r\n      },\r\n      {\r\n        toolName: toolNames.MipJumpToClick,\r\n        configuration: {\r\n          toolGroupId: toolGroupIds.PT,\r\n        },\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\r\n      },\r\n    ],\r\n    enabled: [\r\n      {\r\n        toolName: toolNames.OrientationMarker,\r\n        configuration: {\r\n          orientationWidget: {\r\n            viewportCorner: 'BOTTOM_LEFT',\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.MIP, mipTools);\r\n}\r\n\r\nfunction initToolGroups(toolNames, Enums, toolGroupService, commandsManager) {\r\n  _initToolGroups(toolNames, Enums, toolGroupService, commandsManager);\r\n}\r\n\r\nexport default initToolGroups;\r\n","import { toolGroupIds } from './initToolGroups';\r\nimport i18n from 'i18next';\r\n\r\nconst setToolActiveToolbar = {\r\n  commandName: 'setToolActiveToolbar',\r\n  commandOptions: {\r\n    toolGroupIds: [toolGroupIds.CT, toolGroupIds.PT, toolGroupIds.Fusion],\r\n  },\r\n};\r\n\r\nconst toolbarButtons = [\r\n  {\r\n    id: 'MeasurementTools',\r\n    uiType: 'ohif.toolButtonList',\r\n    props: {\r\n      buttonSection: true,\r\n    },\r\n  },\r\n  {\r\n    id: 'SegmentationTools',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      buttonSection: true,\r\n    },\r\n  },\r\n  {\r\n    id: 'BrushTools',\r\n    uiType: 'ohif.toolBoxButtonGroup',\r\n    props: {\r\n      buttonSection: true,\r\n    },\r\n  },\r\n  {\r\n    id: 'AdvancedRenderingControls',\r\n    uiType: 'ohif.advancedRenderingControls',\r\n    props: {\r\n      buttonSection: true,\r\n    },\r\n  },\r\n  {\r\n    id: 'modalityLoadBadge',\r\n    uiType: 'ohif.modalityLoadBadge',\r\n    props: {\r\n      icon: 'Status',\r\n      label: i18n.t('Buttons:Status'),\r\n      tooltip: i18n.t('Buttons:Status'),\r\n      evaluate: {\r\n        name: 'evaluate.modalityLoadBadge',\r\n        hideWhenDisabled: true,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'Colorbar',\r\n    uiType: 'ohif.colorbar',\r\n    props: {\r\n      type: 'tool',\r\n      label: i18n.t('Buttons:Colorbar'),\r\n    },\r\n  },\r\n  {\r\n    id: 'navigationComponent',\r\n    uiType: 'ohif.navigationComponent',\r\n    props: {\r\n      icon: 'Navigation',\r\n      label: i18n.t('Buttons:Navigation'),\r\n      tooltip: i18n.t('Buttons:Navigate between segments/measurements and manage their visibility'),\r\n      evaluate: {\r\n        name: 'evaluate.navigationComponent',\r\n        hideWhenDisabled: true,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'windowLevelMenuEmbedded',\r\n    uiType: 'ohif.windowLevelMenuEmbedded',\r\n    props: {\r\n      icon: 'WindowLevel',\r\n      label: i18n.t('Buttons:Window Level'),\r\n      tooltip: i18n.t('Buttons:Adjust window/level presets and customize image contrast settings'),\r\n      evaluate: {\r\n        name: 'evaluate.windowLevelMenuEmbedded',\r\n        hideWhenDisabled: true,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'trackingStatus',\r\n    uiType: 'ohif.trackingStatus',\r\n    props: {\r\n      icon: 'TrackingStatus',\r\n      label: i18n.t('Buttons:Tracking Status'),\r\n      tooltip: i18n.t('Buttons:View and manage tracking status of measurements and annotations'),\r\n      evaluate: {\r\n        name: 'evaluate.trackingStatus',\r\n        hideWhenDisabled: true,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'Length',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-length',\r\n      label: i18n.t('Buttons:Length'),\r\n      tooltip: i18n.t('Buttons:Length Tool'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'Bidirectional',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-bidirectional',\r\n      label: i18n.t('Buttons:Bidirectional'),\r\n      tooltip: i18n.t('Buttons:Bidirectional Tool'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'ArrowAnnotate',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-annotate',\r\n      label: i18n.t('Buttons:Arrow Annotate'),\r\n      tooltip: i18n.t('Buttons:Arrow Annotate Tool'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'EllipticalROI',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-ellipse',\r\n      label: i18n.t('Buttons:Ellipse'),\r\n      tooltip: i18n.t('Buttons:Ellipse Tool'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'Zoom',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-zoom',\r\n      label: i18n.t('Buttons:Zoom'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'WindowLevel',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-window-level',\r\n      label: i18n.t('Buttons:Window Level'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'Crosshairs',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-crosshair',\r\n      label: i18n.t('Buttons:Crosshairs'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'Pan',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-move',\r\n      label: i18n.t('Buttons:Pan'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'RectangleROIStartEndThreshold',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      icon: 'tool-create-threshold',\r\n      label: i18n.t('Buttons:Rectangle ROI Threshold'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: [\r\n        'evaluate.cornerstone.segmentation',\r\n        {\r\n          name: 'evaluate.cornerstoneTool',\r\n          disabledText: i18n.t('Buttons:Select the PT Axial to enable this tool'),\r\n        },\r\n      ],\r\n      options: 'tmtv.RectangleROIThresholdOptions',\r\n    },\r\n  },\r\n\r\n  {\r\n    id: 'Brush',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'icon-tool-brush',\r\n      label: i18n.t('Buttons:Brush'),\r\n      evaluate: {\r\n        name: 'evaluate.cornerstone.segmentation',\r\n        toolNames: ['CircularBrush', 'SphereBrush'],\r\n        disabledText: i18n.t('Buttons:Create new segmentation to enable this tool.'),\r\n      },\r\n      options: [\r\n        {\r\n          name: 'Radius (mm)',\r\n          id: 'brush-radius',\r\n          type: 'range',\r\n          min: 0.5,\r\n          max: 99.5,\r\n          step: 0.5,\r\n          value: 25,\r\n          commands: {\r\n            commandName: 'setBrushSize',\r\n            commandOptions: { toolNames: ['CircularBrush', 'SphereBrush'] },\r\n          },\r\n        },\r\n        {\r\n          name: 'Shape',\r\n          type: 'radio',\r\n          id: 'brush-mode',\r\n          value: 'CircularBrush',\r\n          values: [\r\n            { value: 'CircularBrush', label: 'Circle' },\r\n            { value: 'SphereBrush', label: 'Sphere' },\r\n          ],\r\n          commands: 'setToolActiveToolbar',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'Eraser',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'icon-tool-eraser',\r\n      label: i18n.t('Buttons:Eraser'),\r\n      evaluate: {\r\n        name: 'evaluate.cornerstone.segmentation',\r\n        toolNames: ['CircularEraser', 'SphereEraser'],\r\n      },\r\n      options: [\r\n        {\r\n          name: 'Radius (mm)',\r\n          id: 'eraser-radius',\r\n          type: 'range',\r\n          min: 0.5,\r\n          max: 99.5,\r\n          step: 0.5,\r\n          value: 25,\r\n          commands: {\r\n            commandName: 'setBrushSize',\r\n            commandOptions: { toolNames: ['CircularEraser', 'SphereEraser'] },\r\n          },\r\n        },\r\n        {\r\n          name: 'Shape',\r\n          type: 'radio',\r\n          id: 'eraser-mode',\r\n          value: 'CircularEraser',\r\n          values: [\r\n            { value: 'CircularEraser', label: 'Circle' },\r\n            { value: 'SphereEraser', label: 'Sphere' },\r\n          ],\r\n          commands: 'setToolActiveToolbar',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'Threshold',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'icon-tool-threshold',\r\n      label: i18n.t('Buttons:Threshold Tool'),\r\n      evaluate: {\r\n        name: 'evaluate.cornerstone.segmentation',\r\n        toolNames: ['ThresholdCircularBrush', 'ThresholdSphereBrush'],\r\n      },\r\n      options: [\r\n        {\r\n          name: 'Radius (mm)',\r\n          id: 'threshold-radius',\r\n          type: 'range',\r\n          min: 0.5,\r\n          max: 99.5,\r\n          step: 0.5,\r\n          value: 25,\r\n          commands: {\r\n            commandName: 'setBrushSize',\r\n            commandOptions: {\r\n              toolNames: [\r\n                'ThresholdCircularBrush',\r\n                'ThresholdSphereBrush',\r\n                'ThresholdCircularBrushDynamic',\r\n              ],\r\n            },\r\n          },\r\n        },\r\n        {\r\n          name: 'Threshold',\r\n          type: 'radio',\r\n          id: 'dynamic-mode',\r\n          value: 'ThresholdRange',\r\n          values: [\r\n            { value: 'ThresholdDynamic', label: 'Dynamic' },\r\n            { value: 'ThresholdRange', label: 'Range' },\r\n          ],\r\n          commands: ({ value, commandsManager }) => {\r\n            if (value === 'ThresholdDynamic') {\r\n              commandsManager.run('setToolActive', {\r\n                toolName: 'ThresholdCircularBrushDynamic',\r\n              });\r\n            } else {\r\n              commandsManager.run('setToolActive', {\r\n                toolName: 'ThresholdCircularBrush',\r\n              });\r\n            }\r\n          },\r\n        },\r\n        {\r\n          name: 'Shape',\r\n          type: 'radio',\r\n          id: 'eraser-mode',\r\n          value: 'ThresholdCircularBrush',\r\n          values: [\r\n            { value: 'ThresholdCircularBrush', label: 'Circle' },\r\n            { value: 'ThresholdSphereBrush', label: 'Sphere' },\r\n          ],\r\n          condition: ({ options }) =>\r\n            options.find(option => option.id === 'dynamic-mode').value === 'ThresholdRange',\r\n          commands: 'setToolActiveToolbar',\r\n        },\r\n        {\r\n          name: 'ThresholdRange',\r\n          type: 'double-range',\r\n          id: 'threshold-range',\r\n          min: 0,\r\n          max: 50,\r\n          step: 0.5,\r\n          value: [2.5, 50],\r\n          condition: ({ options }) =>\r\n            options.find(option => option.id === 'dynamic-mode').value === 'ThresholdRange',\r\n          commands: {\r\n            commandName: 'setThresholdRange',\r\n            commandOptions: {\r\n              toolNames: ['ThresholdCircularBrush', 'ThresholdSphereBrush'],\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'dataOverlayMenu',\r\n    uiType: 'ohif.dataOverlayMenu',\r\n    props: {\r\n      icon: 'ViewportViews',\r\n      label: i18n.t('Buttons:Data Overlay'),\r\n      tooltip: i18n.t(\r\n        'Buttons:Configure data overlay options and manage foreground/background display sets'\r\n      ),\r\n      evaluate: 'evaluate.dataOverlayMenu',\r\n    },\r\n  },\r\n  {\r\n    id: 'orientationMenu',\r\n    uiType: 'ohif.orientationMenu',\r\n    props: {\r\n      icon: 'OrientationSwitch',\r\n      label: i18n.t('Buttons:Orientation'),\r\n      tooltip: i18n.t(\r\n        'Buttons:Change viewport orientation between axial, sagittal, coronal and reformat planes'\r\n      ),\r\n      evaluate: {\r\n        name: 'evaluate.orientationMenu',\r\n        // hideWhenDisabled: true,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'windowLevelMenu',\r\n    uiType: 'ohif.windowLevelMenu',\r\n    props: {\r\n      icon: 'WindowLevel',\r\n      label: i18n.t('Buttons:Window Level'),\r\n      tooltip: i18n.t('Buttons:Adjust window/level presets and customize image contrast settings'),\r\n      evaluate: 'evaluate.windowLevelMenu',\r\n    },\r\n  },\r\n  {\r\n    id: 'voiManualControlMenu',\r\n    uiType: 'ohif.voiManualControlMenu',\r\n    props: {\r\n      icon: 'WindowLevelAdvanced',\r\n      label: i18n.t('Buttons:Advanced Window Level'),\r\n      tooltip: i18n.t('Buttons:Advanced window/level settings with manual controls and presets'),\r\n      evaluate: 'evaluate.voiManualControlMenu',\r\n    },\r\n  },\r\n  {\r\n    id: 'thresholdMenu',\r\n    uiType: 'ohif.thresholdMenu',\r\n    props: {\r\n      icon: 'Threshold',\r\n      label: i18n.t('Buttons:Threshold'),\r\n      tooltip: i18n.t('Buttons:Image threshold settings'),\r\n      evaluate: {\r\n        name: 'evaluate.thresholdMenu',\r\n        hideWhenDisabled: true,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'opacityMenu',\r\n    uiType: 'ohif.opacityMenu',\r\n    props: {\r\n      icon: 'Opacity',\r\n      label: i18n.t('Buttons:Opacity'),\r\n      tooltip: i18n.t('Buttons:Image opacity settings'),\r\n      evaluate: {\r\n        name: 'evaluate.opacityMenu',\r\n        hideWhenDisabled: true,\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nexport default toolbarButtons;\r\n","import packageJson from '../package.json';\r\n\r\nconst id = packageJson.name;\r\n\r\nexport { id };\r\n","import { classes } from '@ohif/core';\r\nimport toolbarButtons from './toolbarButtons';\r\nimport { id } from './id.js';\r\nimport initToolGroups from './initToolGroups.js';\r\nimport setCrosshairsConfiguration from './utils/setCrosshairsConfiguration.js';\r\nimport setFusionActiveVolume from './utils/setFusionActiveVolume.js';\r\nimport i18n from 'i18next';\r\n\r\nconst { MetadataProvider } = classes;\r\n\r\nconst ohif = {\r\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\r\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\r\n  thumbnailList: '@ohif/extension-default.panelModule.seriesList',\r\n};\r\n\r\nconst cs3d = {\r\n  viewport: '@ohif/extension-cornerstone.viewportModule.cornerstone',\r\n  segPanel: '@ohif/extension-cornerstone.panelModule.panelSegmentationNoHeader',\r\n  measurements: '@ohif/extension-cornerstone.panelModule.measurements',\r\n};\r\n\r\nconst tmtv = {\r\n  hangingProtocol: '@ohif/extension-tmtv.hangingProtocolModule.ptCT',\r\n  petSUV: '@ohif/extension-tmtv.panelModule.petSUV',\r\n  tmtv: '@ohif/extension-tmtv.panelModule.tmtv',\r\n};\r\n\r\nconst extensionDependencies = {\r\n  // Can derive the versions at least process.env.from npm_package_version\r\n  '@ohif/extension-default': '^3.0.0',\r\n  '@ohif/extension-cornerstone': '^3.0.0',\r\n  '@ohif/extension-cornerstone-dicom-seg': '^3.0.0',\r\n  '@ohif/extension-tmtv': '^3.0.0',\r\n};\r\n\r\nconst unsubscriptions = [];\r\nfunction modeFactory({ modeConfiguration }) {\r\n  return {\r\n    // TODO: We're using this as a route segment\r\n    // We should not be.\r\n    id,\r\n    routeName: 'tmtv',\r\n    displayName: i18n.t('Modes:Total Metabolic Tumor Volume'),\r\n    /**\r\n     * Lifecycle hooks\r\n     */\r\n    onModeEnter: ({ servicesManager, extensionManager, commandsManager }: withAppTypes) => {\r\n      const {\r\n        toolbarService,\r\n        toolGroupService,\r\n        customizationService,\r\n        hangingProtocolService,\r\n        displaySetService,\r\n      } = servicesManager.services;\r\n\r\n      const utilityModule = extensionManager.getModuleEntry(\r\n        '@ohif/extension-cornerstone.utilityModule.tools'\r\n      );\r\n\r\n      const { toolNames, Enums } = utilityModule.exports;\r\n\r\n      // Init Default and SR ToolGroups\r\n      initToolGroups(toolNames, Enums, toolGroupService, commandsManager);\r\n\r\n      const { unsubscribe } = toolGroupService.subscribe(\r\n        toolGroupService.EVENTS.VIEWPORT_ADDED,\r\n        () => {\r\n          // For fusion toolGroup we need to add the volumeIds for the crosshairs\r\n          // since in the fusion viewport we don't want both PT and CT to render MIP\r\n          // when slabThickness is modified\r\n          const { displaySetMatchDetails } = hangingProtocolService.getMatchDetails();\r\n\r\n          setCrosshairsConfiguration(\r\n            displaySetMatchDetails,\r\n            toolNames,\r\n            toolGroupService,\r\n            displaySetService\r\n          );\r\n\r\n          setFusionActiveVolume(\r\n            displaySetMatchDetails,\r\n            toolNames,\r\n            toolGroupService,\r\n            displaySetService\r\n          );\r\n        }\r\n      );\r\n\r\n      unsubscriptions.push(unsubscribe);\r\n      toolbarService.register(toolbarButtons);\r\n      toolbarService.updateSection(toolbarService.sections.primary, [\r\n        'MeasurementTools',\r\n        'Zoom',\r\n        'Pan',\r\n        'WindowLevel',\r\n        'Crosshairs',\r\n      ]);\r\n\r\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.topLeft, [\r\n        'orientationMenu',\r\n        'dataOverlayMenu',\r\n      ]);\r\n\r\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.bottomMiddle, [\r\n        'AdvancedRenderingControls',\r\n      ]);\r\n\r\n      toolbarService.updateSection('AdvancedRenderingControls', [\r\n        'windowLevelMenuEmbedded',\r\n        'voiManualControlMenu',\r\n        'Colorbar',\r\n        'opacityMenu',\r\n        'thresholdMenu',\r\n      ]);\r\n\r\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.topRight, [\r\n        'modalityLoadBadge',\r\n        'trackingStatus',\r\n        'navigationComponent',\r\n      ]);\r\n\r\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.bottomLeft, [\r\n        'windowLevelMenu',\r\n      ]);\r\n\r\n      toolbarService.updateSection('MeasurementTools', [\r\n        'Length',\r\n        'Bidirectional',\r\n        'ArrowAnnotate',\r\n        'EllipticalROI',\r\n      ]);\r\n\r\n      toolbarService.updateSection('ROIThresholdToolbox', ['SegmentationTools']);\r\n      toolbarService.updateSection('SegmentationTools', [\r\n        'RectangleROIStartEndThreshold',\r\n        'BrushTools',\r\n      ]);\r\n\r\n      toolbarService.updateSection('BrushTools', ['Brush', 'Eraser', 'Threshold']);\r\n\r\n      customizationService.setCustomizations({\r\n        'panelSegmentation.tableMode': {\r\n          $set: 'expanded',\r\n        },\r\n        'panelSegmentation.onSegmentationAdd': {\r\n          $set: () => {\r\n            commandsManager.run('createNewLabelmapFromPT');\r\n          },\r\n        },\r\n      });\r\n\r\n      // For the hanging protocol we need to decide on the window level\r\n      // based on whether the SUV is corrected or not, hence we can't hard\r\n      // code the window level in the hanging protocol but we add a custom\r\n      // attribute to the hanging protocol that will be used to get the\r\n      // window level based on the metadata\r\n      hangingProtocolService.addCustomAttribute(\r\n        'getPTVOIRange',\r\n        'get PT VOI based on corrected or not',\r\n        props => {\r\n          const ptDisplaySet = props.find(imageSet => imageSet.Modality === 'PT');\r\n\r\n          if (!ptDisplaySet) {\r\n            return;\r\n          }\r\n\r\n          const { imageId } = ptDisplaySet.images[0];\r\n          const imageIdScalingFactor = MetadataProvider.get('scalingModule', imageId);\r\n\r\n          const isSUVAvailable = imageIdScalingFactor && imageIdScalingFactor.suvbw;\r\n\r\n          if (isSUVAvailable) {\r\n            return {\r\n              windowWidth: 5,\r\n              windowCenter: 2.5,\r\n            };\r\n          }\r\n\r\n          return;\r\n        }\r\n      );\r\n    },\r\n    onModeExit: ({ servicesManager }: withAppTypes) => {\r\n      const {\r\n        toolGroupService,\r\n        syncGroupService,\r\n        segmentationService,\r\n        cornerstoneViewportService,\r\n        uiDialogService,\r\n        uiModalService,\r\n      } = servicesManager.services;\r\n\r\n      unsubscriptions.forEach(unsubscribe => unsubscribe());\r\n      uiDialogService.hideAll();\r\n      uiModalService.hide();\r\n      toolGroupService.destroy();\r\n      syncGroupService.destroy();\r\n      segmentationService.destroy();\r\n      cornerstoneViewportService.destroy();\r\n    },\r\n    validationTags: {\r\n      study: [],\r\n      series: [],\r\n    },\r\n    isValidMode: ({ modalities, study }) => {\r\n      const modalities_list = modalities.split('\\\\');\r\n      const invalidModalities = ['SM'];\r\n\r\n      const isValid =\r\n        modalities_list.includes('CT') &&\r\n        study.mrn !== 'M1' &&\r\n        modalities_list.includes('PT') &&\r\n        !invalidModalities.some(modality => modalities_list.includes(modality)) &&\r\n        // This is study is a 4D study with PT and CT and not a 3D study for the tmtv\r\n        // mode, until we have a better way to identify 4D studies we will use the\r\n        // StudyInstanceUID to identify the study\r\n        // Todo: when we add the 4D mode which comes with a mechanism to identify\r\n        // 4D studies we can use that\r\n        study.studyInstanceUid !== '1.3.6.1.4.1.12842.1.1.14.3.20220915.105557.468.2963630849';\r\n\r\n      // there should be both CT and PT modalities and the modality should not be SM\r\n      return {\r\n        valid: isValid,\r\n        description: 'The mode requires both PT and CT series in the study',\r\n      };\r\n    },\r\n    routes: [\r\n      {\r\n        path: 'tmtv',\r\n        /*init: ({ servicesManager, extensionManager }) => {\r\n          //defaultViewerRouteInit\r\n        },*/\r\n        layoutTemplate: () => {\r\n          return {\r\n            id: ohif.layout,\r\n            props: {\r\n              leftPanels: [ohif.thumbnailList],\r\n              leftPanelResizable: true,\r\n              leftPanelClosed: true,\r\n              rightPanels: [tmtv.tmtv, tmtv.petSUV],\r\n              rightPanelResizable: true,\r\n              viewports: [\r\n                {\r\n                  namespace: cs3d.viewport,\r\n                  displaySetsToDisplay: [ohif.sopClassHandler],\r\n                },\r\n              ],\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ],\r\n    extensions: extensionDependencies,\r\n    hangingProtocol: tmtv.hangingProtocol,\r\n    sopClassHandlers: [ohif.sopClassHandler],\r\n    ...modeConfiguration,\r\n  };\r\n}\r\n\r\nconst mode = {\r\n  id,\r\n  modeFactory,\r\n  extensionDependencies,\r\n};\r\n\r\nexport default mode;\r\n","import { toolGroupIds } from '../initToolGroups';\r\n\r\nexport default function setCrosshairsConfiguration(\r\n  matches,\r\n  toolNames,\r\n  toolGroupService,\r\n  displaySetService\r\n) {\r\n  const matchDetails = matches.get('ctDisplaySet');\r\n\r\n  if (!matchDetails) {\r\n    return;\r\n  }\r\n\r\n  const { SeriesInstanceUID } = matchDetails;\r\n  const displaySets = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\r\n\r\n  const toolConfig = toolGroupService.getToolConfiguration(\r\n    toolGroupIds.Fusion,\r\n    toolNames.Crosshairs\r\n  );\r\n\r\n  const crosshairsConfig = {\r\n    ...toolConfig,\r\n    filterActorUIDsToSetSlabThickness: [displaySets[0].displaySetInstanceUID],\r\n  };\r\n\r\n  toolGroupService.setToolConfiguration(\r\n    toolGroupIds.Fusion,\r\n    toolNames.Crosshairs,\r\n    crosshairsConfig\r\n  );\r\n}\r\n","import { toolGroupIds } from '../initToolGroups';\r\n\r\nexport default function setFusionActiveVolume(\r\n  matches,\r\n  toolNames,\r\n  toolGroupService,\r\n  displaySetService\r\n) {\r\n  const matchDetails = matches.get('ptDisplaySet');\r\n  const matchDetails2 = matches.get('ctDisplaySet');\r\n\r\n  if (!matchDetails) {\r\n    return;\r\n  }\r\n\r\n  const { SeriesInstanceUID } = matchDetails;\r\n\r\n  const displaySets = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\r\n\r\n  if (!displaySets || displaySets.length === 0) {\r\n    return;\r\n  }\r\n\r\n  const wlToolConfig = toolGroupService.getToolConfiguration(\r\n    toolGroupIds.Fusion,\r\n    toolNames.WindowLevel\r\n  );\r\n\r\n  const ellipticalToolConfig = toolGroupService.getToolConfiguration(\r\n    toolGroupIds.Fusion,\r\n    toolNames.EllipticalROI\r\n  );\r\n\r\n  // Todo: this should not take into account the loader id\r\n  const volumeId = `cornerstoneStreamingImageVolume:${displaySets[0].displaySetInstanceUID}`;\r\n  const { SeriesInstanceUID: SeriesInstanceUID2 } = matchDetails2;\r\n  const ctDisplaySets = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID2);\r\n  const ctVolumeId = `cornerstoneStreamingImageVolume:${ctDisplaySets[0].displaySetInstanceUID}`;\r\n\r\n  const windowLevelConfig = {\r\n    ...wlToolConfig,\r\n    volumeId: ctVolumeId,\r\n  };\r\n\r\n  const ellipticalROIConfig = {\r\n    ...ellipticalToolConfig,\r\n    volumeId,\r\n  };\r\n\r\n  toolGroupService.setToolConfiguration(\r\n    toolGroupIds.Fusion,\r\n    toolNames.WindowLevel,\r\n    windowLevelConfig\r\n  );\r\n\r\n  toolGroupService.setToolConfiguration(\r\n    toolGroupIds.Fusion,\r\n    toolNames.EllipticalROI,\r\n    ellipticalROIConfig\r\n  );\r\n}\r\n"],"names":["toolGroupIds","toolNames","Enums","toolGroupService","commandsManager","tools","active","toolName","WindowLevel","bindings","mouseButton","MouseBindings","Primary","Pan","Auxiliary","Zoom","Secondary","numTouchPoints","StackScroll","Wheel","passive","Length","SegmentBidirectional","ArrowAnnotate","configuration","getTextCallback","callback","eventDetails","runCommand","changeTextCallback","data","Bidirectional","DragProbe","Probe","EllipticalROI","RectangleROI","Angle","CobbAngle","Magnify","parentTool","activeStrategy","threshold","isDynamic","dynamicRadius","enabled","disabled","Crosshairs","disableOnPassive","autoPan","panSize","createToolGroupAndAddTools","mipTools","VolumeRotate","rotateIncrementDegrees","MipJumpToClick","toolGroupId","OrientationMarker","orientationWidget","viewportCorner","_initToolGroups","setToolActiveToolbar","commandName","commandOptions","id","uiType","props","buttonSection","icon","label","i18n","t","tooltip","evaluate","name","hideWhenDisabled","type","commands","disabledText","options","min","max","step","value","values","run","condition","find","option","packageJson","MetadataProvider","classes","ohif","cs3d","tmtv","extensionDependencies","unsubscriptions","modeFactory","modeConfiguration","routeName","displayName","onModeEnter","servicesManager","extensionManager","toolbarService","customizationService","hangingProtocolService","displaySetService","services","utilityModule","getModuleEntry","exports","initToolGroups","unsubscribe","subscribe","EVENTS","VIEWPORT_ADDED","displaySetMatchDetails","getMatchDetails","matches","matchDetails","get","SeriesInstanceUID","displaySets","getDisplaySetsForSeries","crosshairsConfig","getToolConfiguration","filterActorUIDsToSetSlabThickness","displaySetInstanceUID","setToolConfiguration","setCrosshairsConfiguration","matchDetails2","length","wlToolConfig","ellipticalToolConfig","volumeId","SeriesInstanceUID2","windowLevelConfig","ellipticalROIConfig","setFusionActiveVolume","push","register","toolbarButtons","updateSection","sections","primary","viewportActionMenu","topLeft","bottomMiddle","topRight","bottomLeft","setCustomizations","$set","addCustomAttribute","ptDisplaySet","imageSet","Modality","imageId","images","imageIdScalingFactor","suvbw","windowWidth","windowCenter","onModeExit","syncGroupService","segmentationService","cornerstoneViewportService","uiDialogService","uiModalService","forEach","hideAll","hide","destroy","validationTags","study","series","isValidMode","modalities","modalities_list","split","valid","includes","mrn","some","modality","studyInstanceUid","description","routes","path","layoutTemplate","leftPanels","leftPanelResizable","leftPanelClosed","rightPanels","rightPanelResizable","viewports","namespace","displaySetsToDisplay","extensions","hangingProtocol","sopClassHandlers"],"sourceRoot":""}