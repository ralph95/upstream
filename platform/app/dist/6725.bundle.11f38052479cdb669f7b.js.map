{"version":3,"file":"6725.bundle.11f38052479cdb669f7b.js","mappings":"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","sources":["webpack:///../../../modes/segmentation/src/id.js","webpack:///../../../modes/segmentation/src/toolbarButtons.ts","webpack:///../../../modes/segmentation/src/initToolGroups.ts","webpack:///../../../modes/segmentation/src/index.tsx","webpack:///../../../modes/segmentation/src/utils/setUpAutoTabSwitchHandler.ts"],"sourcesContent":["import packageJson from '../package.json';\r\n\r\nconst id = packageJson.name;\r\n\r\nexport { id };\r\n","import type { Button } from '@ohif/core/types';\r\nimport { ViewportGridService } from '@ohif/core';\r\nimport i18n from 'i18next';\r\n\r\nconst setToolActiveToolbar = {\r\n  commandName: 'setToolActiveToolbar',\r\n  commandOptions: {\r\n    toolGroupIds: ['default', 'mpr', 'SRToolGroup', 'volume3d'],\r\n  },\r\n};\r\n\r\nconst callbacks = (toolName: string) => [\r\n  {\r\n    commandName: 'setViewportForToolConfiguration',\r\n    commandOptions: {\r\n      toolName,\r\n    },\r\n  },\r\n];\r\n\r\nconst toolbarButtons: Button[] = [\r\n  {\r\n    id: 'AdvancedRenderingControls',\r\n    uiType: 'ohif.advancedRenderingControls',\r\n    props: {\r\n      buttonSection: true,\r\n    },\r\n  },\r\n  {\r\n    id: 'modalityLoadBadge',\r\n    uiType: 'ohif.modalityLoadBadge',\r\n    props: {\r\n      icon: 'Status',\r\n      label: i18n.t('Buttons:Status'),\r\n      tooltip: i18n.t('Buttons:Status'),\r\n      evaluate: {\r\n        name: 'evaluate.modalityLoadBadge',\r\n        hideWhenDisabled: true,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'navigationComponent',\r\n    uiType: 'ohif.navigationComponent',\r\n    props: {\r\n      icon: 'Navigation',\r\n      label: i18n.t('Buttons:Navigation'),\r\n      tooltip: i18n.t('Buttons:Navigate between segments/measurements and manage their visibility'),\r\n      evaluate: {\r\n        name: 'evaluate.navigationComponent',\r\n        hideWhenDisabled: true,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'trackingStatus',\r\n    uiType: 'ohif.trackingStatus',\r\n    props: {\r\n      icon: 'TrackingStatus',\r\n      label: i18n.t('Buttons:Tracking Status'),\r\n      tooltip: i18n.t('Buttons:View and manage tracking status of measurements and annotations'),\r\n      evaluate: {\r\n        name: 'evaluate.trackingStatus',\r\n        hideWhenDisabled: true,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'dataOverlayMenu',\r\n    uiType: 'ohif.dataOverlayMenu',\r\n    props: {\r\n      icon: 'ViewportViews',\r\n      label: i18n.t('Buttons:Data Overlay'),\r\n      tooltip: i18n.t(\r\n        'Buttons:Configure data overlay options and manage foreground/background display sets'\r\n      ),\r\n      evaluate: 'evaluate.dataOverlayMenu',\r\n    },\r\n  },\r\n  {\r\n    id: 'orientationMenu',\r\n    uiType: 'ohif.orientationMenu',\r\n    props: {\r\n      icon: 'OrientationSwitch',\r\n      label: i18n.t('Buttons:Orientation'),\r\n      tooltip: i18n.t(\r\n        'Buttons:Change viewport orientation between axial, sagittal, coronal and reformat planes'\r\n      ),\r\n      evaluate: {\r\n        name: 'evaluate.orientationMenu',\r\n        // hideWhenDisabled: true,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'windowLevelMenuEmbedded',\r\n    uiType: 'ohif.windowLevelMenuEmbedded',\r\n    props: {\r\n      icon: 'WindowLevel',\r\n      label: i18n.t('Buttons:Window Level'),\r\n      tooltip: i18n.t('Buttons:Adjust window/level presets and customize image contrast settings'),\r\n      evaluate: {\r\n        name: 'evaluate.windowLevelMenuEmbedded',\r\n        hideWhenDisabled: true,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'windowLevelMenu',\r\n    uiType: 'ohif.windowLevelMenu',\r\n    props: {\r\n      icon: 'WindowLevel',\r\n      label: i18n.t('Buttons:Window Level'),\r\n      tooltip: i18n.t('Buttons:Adjust window/level presets and customize image contrast settings'),\r\n      evaluate: 'evaluate.windowLevelMenu',\r\n    },\r\n  },\r\n  {\r\n    id: 'voiManualControlMenu',\r\n    uiType: 'ohif.voiManualControlMenu',\r\n    props: {\r\n      icon: 'WindowLevelAdvanced',\r\n      label: i18n.t('Buttons:Advanced Window Level'),\r\n      tooltip: i18n.t('Buttons:Advanced window/level settings with manual controls and presets'),\r\n      evaluate: 'evaluate.voiManualControlMenu',\r\n    },\r\n  },\r\n  {\r\n    id: 'thresholdMenu',\r\n    uiType: 'ohif.thresholdMenu',\r\n    props: {\r\n      icon: 'Threshold',\r\n      label: i18n.t('Buttons:Threshold'),\r\n      tooltip: i18n.t('Buttons:Image threshold settings'),\r\n      evaluate: {\r\n        name: 'evaluate.thresholdMenu',\r\n        hideWhenDisabled: true,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'opacityMenu',\r\n    uiType: 'ohif.opacityMenu',\r\n    props: {\r\n      icon: 'Opacity',\r\n      label: i18n.t('Buttons:Opacity'),\r\n      tooltip: i18n.t('Buttons:Image opacity settings'),\r\n      evaluate: {\r\n        name: 'evaluate.opacityMenu',\r\n        hideWhenDisabled: true,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'Colorbar',\r\n    uiType: 'ohif.colorbar',\r\n    props: {\r\n      type: 'tool',\r\n      label: i18n.t('Buttons:Colorbar'),\r\n    },\r\n  },\r\n  // sections\r\n  {\r\n    id: 'MoreTools',\r\n    uiType: 'ohif.toolButtonList',\r\n    props: {\r\n      buttonSection: true,\r\n    },\r\n  },\r\n  {\r\n    id: 'BrushTools',\r\n    uiType: 'ohif.toolBoxButtonGroup',\r\n    props: {\r\n      buttonSection: true,\r\n    },\r\n  },\r\n  // Section containers for the nested toolboxes and toolbars.\r\n  {\r\n    id: 'LabelMapUtilities',\r\n    uiType: 'ohif.Toolbar',\r\n    props: {\r\n      buttonSection: true,\r\n    },\r\n  },\r\n  {\r\n    id: 'ContourUtilities',\r\n    uiType: 'ohif.Toolbar',\r\n    props: {\r\n      buttonSection: true,\r\n    },\r\n  },\r\n  {\r\n    id: 'LabelMapTools',\r\n    uiType: 'ohif.toolBoxButtonGroup',\r\n    props: {\r\n      buttonSection: true,\r\n    },\r\n  },\r\n  {\r\n    id: 'ContourTools',\r\n    uiType: 'ohif.toolBoxButtonGroup',\r\n    props: {\r\n      buttonSection: true,\r\n    },\r\n  },\r\n  // tool defs\r\n  {\r\n    id: 'Zoom',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-zoom',\r\n      label: i18n.t('Buttons:Zoom'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'WindowLevel',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-window-level',\r\n      label: i18n.t('Buttons:Window Level'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'Pan',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-move',\r\n      label: i18n.t('Buttons:Pan'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'TrackballRotate',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      type: 'tool',\r\n      icon: 'tool-3d-rotate',\r\n      label: i18n.t('Buttons:3D Rotate'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: {\r\n        name: 'evaluate.cornerstoneTool',\r\n        disabledText: i18n.t('Buttons:Select a 3D viewport to enable this tool'),\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'Capture',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-capture',\r\n      label: i18n.t('Buttons:Capture'),\r\n      commands: 'showDownloadViewportModal',\r\n      evaluate: [\r\n        'evaluate.action',\r\n        {\r\n          name: 'evaluate.viewport.supported',\r\n          unsupportedViewportTypes: ['video', 'wholeSlide'],\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'Layout',\r\n    uiType: 'ohif.layoutSelector',\r\n    props: {\r\n      rows: 3,\r\n      columns: 4,\r\n      evaluate: 'evaluate.action',\r\n      commands: 'setViewportGridLayout',\r\n    },\r\n  },\r\n  {\r\n    id: 'Crosshairs',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-crosshair',\r\n      label: i18n.t('Buttons:Crosshairs'),\r\n      commands: {\r\n        commandName: 'setToolActiveToolbar',\r\n        commandOptions: {\r\n          toolGroupIds: ['mpr'],\r\n        },\r\n      },\r\n      evaluate: {\r\n        name: 'evaluate.cornerstoneTool',\r\n        disabledText: i18n.t('Buttons:Select an MPR viewport to enable this tool'),\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'Reset',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-reset',\r\n      label: i18n.t('Buttons:Reset View'),\r\n      tooltip: i18n.t('Buttons:Reset View'),\r\n      commands: 'resetViewport',\r\n      evaluate: 'evaluate.action',\r\n    },\r\n  },\r\n  {\r\n    id: 'rotate-right',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-rotate-right',\r\n      label: i18n.t('Buttons:Rotate Right'),\r\n      tooltip: i18n.t('Buttons:Rotate +90'),\r\n      commands: 'rotateViewportCW',\r\n      evaluate: 'evaluate.action',\r\n    },\r\n  },\r\n  {\r\n    id: 'flipHorizontal',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-flip-horizontal',\r\n      label: i18n.t('Buttons:Flip Horizontal'),\r\n      tooltip: i18n.t('Buttons:Flip Horizontally'),\r\n      commands: 'flipViewportHorizontal',\r\n      evaluate: [\r\n        'evaluate.viewportProperties.toggle',\r\n        {\r\n          name: 'evaluate.viewport.supported',\r\n          unsupportedViewportTypes: ['volume3d'],\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'ReferenceLines',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-referenceLines',\r\n      label: i18n.t('Buttons:Reference Lines'),\r\n      tooltip: i18n.t('Buttons:Show Reference Lines'),\r\n      commands: 'toggleEnabledDisabledToolbar',\r\n      evaluate: 'evaluate.cornerstoneTool.toggle',\r\n    },\r\n  },\r\n  {\r\n    id: 'ImageOverlayViewer',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'toggle-dicom-overlay',\r\n      label: i18n.t('Buttons:Image Overlay'),\r\n      tooltip: i18n.t('Buttons:Toggle Image Overlay'),\r\n      commands: 'toggleEnabledDisabledToolbar',\r\n      evaluate: 'evaluate.cornerstoneTool.toggle',\r\n    },\r\n  },\r\n  {\r\n    id: 'StackScroll',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-stack-scroll',\r\n      label: i18n.t('Buttons:Stack Scroll'),\r\n      tooltip: i18n.t('Buttons:Stack Scroll'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'invert',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-invert',\r\n      label: i18n.t('Buttons:Invert'),\r\n      tooltip: i18n.t('Buttons:Invert Colors'),\r\n      commands: 'invertViewport',\r\n      evaluate: 'evaluate.viewportProperties.toggle',\r\n    },\r\n  },\r\n  {\r\n    id: 'Cine',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-cine',\r\n      label: i18n.t('Buttons:Cine'),\r\n      tooltip: i18n.t('Buttons:Cine'),\r\n      commands: 'toggleCine',\r\n      evaluate: [\r\n        'evaluate.cine',\r\n        {\r\n          name: 'evaluate.viewport.supported',\r\n          unsupportedViewportTypes: ['volume3d'],\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'Magnify',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'tool-magnify',\r\n      label: i18n.t('Buttons:Zoom-in'),\r\n      tooltip: i18n.t('Buttons:Zoom-in'),\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'TagBrowser',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'dicom-tag-browser',\r\n      label: i18n.t('Buttons:Dicom Tag Browser'),\r\n      tooltip: i18n.t('Buttons:Dicom Tag Browser'),\r\n      commands: 'openDICOMTagViewer',\r\n    },\r\n  },\r\n  {\r\n    id: 'PlanarFreehandContourSegmentationTool',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      icon: 'icon-tool-freehand-roi',\r\n      label: 'Freehand Segmentation',\r\n      tooltip: 'Freehand Segmentation',\r\n      evaluate: [\r\n        {\r\n          name: 'evaluate.cornerstone.segmentation',\r\n          toolNames: ['PlanarFreehandContourSegmentationTool'],\r\n          disabledText: 'Create new segmentation to enable this tool.',\r\n        },\r\n        {\r\n          name: 'evaluate.cornerstone.hasSegmentationOfType',\r\n          segmentationRepresentationType: 'Contour',\r\n        },\r\n      ],\r\n      commands: [\r\n        {\r\n          commandName: 'setToolActiveToolbar',\r\n          commandOptions: {\r\n            bindings: [\r\n              {\r\n                mouseButton: 1, // Left Click\r\n              },\r\n              {\r\n                mouseButton: 1, // Left Click+Shift to create a hole\r\n                modifierKey: 16, // Shift\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        {\r\n          commandName: 'activateSelectedSegmentationOfType',\r\n          commandOptions: {\r\n            segmentationRepresentationType: 'Contour',\r\n          },\r\n        },\r\n      ],\r\n      options: [\r\n        {\r\n          name: 'Interpolate Contours',\r\n          type: 'switch',\r\n          id: 'planarFreehandInterpolateContours',\r\n          value: false,\r\n          commands: {\r\n            commandName: 'setInterpolationToolConfiguration',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'LivewireContourSegmentationTool',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      icon: 'icon-tool-livewire',\r\n      label: 'Livewire Contour',\r\n      tooltip: 'Livewire Contour',\r\n      evaluate: [\r\n        {\r\n          name: 'evaluate.cornerstone.segmentation',\r\n          toolNames: ['LivewireContourSegmentationTool'],\r\n          disabledText: 'Create new segmentation to enable this tool.',\r\n        },\r\n        {\r\n          name: 'evaluate.cornerstone.hasSegmentationOfType',\r\n          segmentationRepresentationType: 'Contour',\r\n        },\r\n      ],\r\n      commands: [\r\n        {\r\n          commandName: 'setToolActiveToolbar',\r\n          commandOptions: {\r\n            bindings: [\r\n              {\r\n                mouseButton: 1, // Left Click\r\n              },\r\n              {\r\n                mouseButton: 1, // Left Click+Shift to create a hole\r\n                modifierKey: 16, // Shift\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        {\r\n          commandName: 'activateSelectedSegmentationOfType',\r\n          commandOptions: {\r\n            segmentationRepresentationType: 'Contour',\r\n          },\r\n        },\r\n      ],\r\n      options: [\r\n        {\r\n          name: 'Interpolate Contours',\r\n          type: 'switch',\r\n          id: 'livewireInterpolateContours',\r\n          value: false,\r\n          commands: {\r\n            commandName: 'setInterpolationToolConfiguration',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'SplineContourSegmentationTool',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      icon: 'icon-tool-spline-roi',\r\n      label: 'Spline Contour Segmentation Tool',\r\n      tooltip: 'Spline Contour Segmentation Tool',\r\n      evaluate: [\r\n        {\r\n          name: 'evaluate.cornerstone.segmentation',\r\n          toolNames: ['CatmullRomSplineROI', 'LinearSplineROI', 'BSplineROI'],\r\n          disabledText: 'Create new segmentation to enable this tool.',\r\n        },\r\n        {\r\n          name: 'evaluate.cornerstone.hasSegmentationOfType',\r\n          segmentationRepresentationType: 'Contour',\r\n        },\r\n      ],\r\n      commands: [\r\n        {\r\n          commandName: 'activateSelectedSegmentationOfType',\r\n          commandOptions: {\r\n            segmentationRepresentationType: 'Contour',\r\n          },\r\n        },\r\n      ],\r\n      options: [\r\n        {\r\n          name: 'Spline Type',\r\n          type: 'select',\r\n          id: 'splineTypeSelect',\r\n          value: 'CatmullRomSplineROI',\r\n          values: [\r\n            {\r\n              id: 'CatmullRomSplineROI',\r\n              value: 'CatmullRomSplineROI',\r\n              label: 'Catmull Rom Spline',\r\n            },\r\n            { id: 'LinearSplineROI', value: 'LinearSplineROI', label: 'Linear Spline' },\r\n            { id: 'BSplineROI', value: 'BSplineROI', label: 'B-Spline' },\r\n          ],\r\n          commands: {\r\n            commandName: 'setToolActiveToolbar',\r\n            commandOptions: {\r\n              bindings: [\r\n                {\r\n                  mouseButton: 1, // Left Click\r\n                },\r\n                {\r\n                  mouseButton: 1, // Left Click+Shift to create a hole\r\n                  modifierKey: 16, // Shift\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n        {\r\n          name: 'Simplified Spline',\r\n          type: 'switch',\r\n          id: 'simplifiedSpline',\r\n          value: true,\r\n          commands: {\r\n            commandName: 'setSimplifiedSplineForSplineContourSegmentationTool',\r\n          },\r\n        },\r\n        {\r\n          name: 'Interpolate Contours',\r\n          type: 'switch',\r\n          id: 'splineInterpolateContours',\r\n          value: false,\r\n          commands: {\r\n            commandName: 'setInterpolationToolConfiguration',\r\n            commandOptions: {\r\n              toolNames: ['CatmullRomSplineROI', 'LinearSplineROI', 'BSplineROI'],\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'SculptorTool',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      icon: 'icon-tool-sculptor',\r\n      label: 'Sculptor Tool',\r\n      tooltip: 'Sculptor Tool',\r\n      evaluate: [\r\n        {\r\n          name: 'evaluate.cornerstone.segmentation',\r\n          toolNames: ['SculptorTool'],\r\n          disabledText: 'Create new segmentation to enable this tool.',\r\n        },\r\n        {\r\n          name: 'evaluate.cornerstone.hasSegmentationOfType',\r\n          segmentationRepresentationType: 'Contour',\r\n        },\r\n      ],\r\n      commands: [\r\n        'setToolActiveToolbar',\r\n        {\r\n          commandName: 'activateSelectedSegmentationOfType',\r\n          commandOptions: {\r\n            segmentationRepresentationType: 'Contour',\r\n          },\r\n        },\r\n      ],\r\n      options: [\r\n        {\r\n          name: 'Dynamic Cursor Size',\r\n          type: 'switch',\r\n          id: 'dynamicCursorSize',\r\n          value: true,\r\n          commands: {\r\n            commandName: 'setDynamicCursorSizeForSculptorTool',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'Brush',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      icon: 'icon-tool-brush',\r\n      label: i18n.t('Buttons:Brush'),\r\n      evaluate: [\r\n        {\r\n          name: 'evaluate.cornerstone.segmentation',\r\n          toolNames: ['CircularBrush', 'SphereBrush'],\r\n          disabledText: i18n.t('Buttons:Create new segmentation to enable this tool.'),\r\n        },\r\n        {\r\n          name: 'evaluate.cornerstone.hasSegmentationOfType',\r\n          segmentationRepresentationType: 'Labelmap',\r\n        },\r\n      ],\r\n      commands: {\r\n        commandName: 'activateSelectedSegmentationOfType',\r\n        commandOptions: {\r\n          segmentationRepresentationType: 'Labelmap',\r\n        },\r\n      },\r\n      options: [\r\n        {\r\n          name: 'Radius (mm)',\r\n          id: 'brush-radius',\r\n          type: 'range',\r\n          min: 0.5,\r\n          max: 99.5,\r\n          step: 0.5,\r\n          value: 25,\r\n          commands: [\r\n            {\r\n              commandName: 'setBrushSize',\r\n              commandOptions: { toolNames: ['CircularBrush', 'SphereBrush'] },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          name: 'Shape',\r\n          type: 'radio',\r\n          id: 'brush-mode',\r\n          value: 'CircularBrush',\r\n          values: [\r\n            { value: 'CircularBrush', label: 'Circle' },\r\n            { value: 'SphereBrush', label: 'Sphere' },\r\n          ],\r\n          commands: ['setToolActiveToolbar'],\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'InterpolateLabelmap',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'actions-interpolate',\r\n      label: i18n.t('Buttons:Interpolate Labelmap'),\r\n      tooltip: i18n.t(\r\n        'Buttons:Automatically fill in missing slices between drawn segments. Use brush or threshold tools on at least two slices, then click to interpolate across slices. Works in any direction. Volume must be reconstructable.'\r\n      ),\r\n      evaluate: [\r\n        {\r\n          name: 'evaluate.cornerstone.segmentation',\r\n        },\r\n        {\r\n          name: 'evaluate.cornerstone.hasSegmentationOfType',\r\n          segmentationRepresentationType: 'Labelmap',\r\n        },\r\n        {\r\n          name: 'evaluate.displaySetIsReconstructable',\r\n          disabledText: i18n.t('Buttons:The current viewport cannot handle interpolation.'),\r\n        },\r\n      ],\r\n      commands: [\r\n        {\r\n          commandName: 'activateSelectedSegmentationOfType',\r\n          commandOptions: {\r\n            segmentationRepresentationType: 'Labelmap',\r\n          },\r\n        },\r\n        'interpolateLabelmap',\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'SegmentBidirectional',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'actions-bidirectional',\r\n      label: i18n.t('Buttons:Segment Bidirectional'),\r\n      tooltip: i18n.t(\r\n        'Buttons:Automatically detects the largest length and width across slices for the selected segment and displays a bidirectional measurement.'\r\n      ),\r\n      evaluate: [\r\n        {\r\n          name: 'evaluate.cornerstone.segmentation',\r\n          disabledText: i18n.t('Buttons:Create new segmentation to enable this tool.'),\r\n        },\r\n        {\r\n          name: 'evaluate.cornerstone.hasSegmentationOfType',\r\n          segmentationRepresentationType: 'Labelmap',\r\n        },\r\n      ],\r\n      commands: [\r\n        {\r\n          commandName: 'activateSelectedSegmentationOfType',\r\n          commandOptions: {\r\n            segmentationRepresentationType: 'Labelmap',\r\n          },\r\n        },\r\n        'runSegmentBidirectional',\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'RegionSegmentPlus',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      icon: 'icon-tool-click-segment',\r\n      label: i18n.t('Buttons:One Click Segment'),\r\n      tooltip: i18n.t(\r\n        'Buttons:Detects segmentable regions with one click. Hover for visual feedback—click when a plus sign appears to auto-segment the lesion.'\r\n      ),\r\n      evaluate: [\r\n        {\r\n          name: 'evaluate.cornerstone.segmentation',\r\n          toolNames: ['RegionSegmentPlus'],\r\n          disabledText: i18n.t('Buttons:Create new segmentation to enable this tool.'),\r\n        },\r\n        {\r\n          name: 'evaluate.cornerstone.hasSegmentationOfType',\r\n          segmentationRepresentationType: 'Labelmap',\r\n        },\r\n      ],\r\n      commands: [\r\n        'setToolActiveToolbar',\r\n        {\r\n          commandName: 'activateSelectedSegmentationOfType',\r\n          commandOptions: {\r\n            segmentationRepresentationType: 'Labelmap',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'LabelmapSlicePropagation',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      icon: 'icon-labelmap-slice-propagation',\r\n      label: i18n.t('Buttons:Labelmap Assist'),\r\n      tooltip: i18n.t(\r\n        'Buttons:Toggle AI assistance for segmenting nearby slices. After drawing on a slice, scroll to preview predictions. Press Enter to accept or Esc to skip.'\r\n      ),\r\n      evaluate: [\r\n        'evaluate.cornerstoneTool.toggle',\r\n        {\r\n          name: 'evaluate.cornerstone.hasSegmentationOfType',\r\n          segmentationRepresentationType: 'Labelmap',\r\n        },\r\n      ],\r\n      listeners: {\r\n        [ViewportGridService.EVENTS.ACTIVE_VIEWPORT_ID_CHANGED]: callbacks(\r\n          'LabelmapSlicePropagation'\r\n        ),\r\n        [ViewportGridService.EVENTS.VIEWPORTS_READY]: callbacks('LabelmapSlicePropagation'),\r\n      },\r\n      commands: [\r\n        {\r\n          commandName: 'activateSelectedSegmentationOfType',\r\n          commandOptions: {\r\n            segmentationRepresentationType: 'Labelmap',\r\n          },\r\n        },\r\n        'toggleEnabledDisabledToolbar',\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'MarkerLabelmap',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      icon: 'icon-marker-labelmap',\r\n      label: i18n.t('Buttons:Marker Guided Labelmap'),\r\n      tooltip: i18n.t(\r\n        'Buttons:Use include/exclude markers to guide AI (SAM) segmentation. Click to place markers, Enter to accept results, Esc to reject, and N to go to the next slice while keeping markers.'\r\n      ),\r\n      evaluate: [\r\n        {\r\n          name: 'evaluate.cornerstone.segmentation',\r\n          toolNames: ['MarkerLabelmap', 'MarkerInclude', 'MarkerExclude'],\r\n        },\r\n        {\r\n          name: 'evaluate.cornerstone.hasSegmentationOfType',\r\n          segmentationRepresentationType: 'Labelmap',\r\n        },\r\n      ],\r\n      commands: [\r\n        'setToolActiveToolbar',\r\n        {\r\n          commandName: 'activateSelectedSegmentationOfType',\r\n          commandOptions: {\r\n            segmentationRepresentationType: 'Labelmap',\r\n          },\r\n        },\r\n      ],\r\n      listeners: {\r\n        [ViewportGridService.EVENTS.ACTIVE_VIEWPORT_ID_CHANGED]: callbacks('MarkerLabelmap'),\r\n        [ViewportGridService.EVENTS.VIEWPORTS_READY]: callbacks('MarkerLabelmap'),\r\n      },\r\n      options: [\r\n        {\r\n          name: 'Marker Mode',\r\n          type: 'radio',\r\n          id: 'marker-mode',\r\n          value: 'markerInclude',\r\n          values: [\r\n            { value: 'markerInclude', label: 'Include' },\r\n            { value: 'markerExclude', label: 'Exclude' },\r\n          ],\r\n          commands: ({ commandsManager, options }) => {\r\n            const markerModeOption = options.find(option => option.id === 'marker-mode');\r\n            if (markerModeOption.value === 'markerInclude') {\r\n              commandsManager.run('setToolActive', {\r\n                toolName: 'MarkerInclude',\r\n              });\r\n            } else {\r\n              commandsManager.run('setToolActive', {\r\n                toolName: 'MarkerExclude',\r\n              });\r\n            }\r\n          },\r\n        },\r\n        {\r\n          name: 'Clear Markers',\r\n          type: 'button',\r\n          id: 'clear-markers',\r\n          commands: 'clearMarkersForMarkerLabelmap',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'Eraser',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      icon: 'icon-tool-eraser',\r\n      label: i18n.t('Buttons:Eraser'),\r\n      evaluate: [\r\n        {\r\n          name: 'evaluate.cornerstone.segmentation',\r\n          toolNames: ['CircularEraser', 'SphereEraser'],\r\n        },\r\n        {\r\n          name: 'evaluate.cornerstone.hasSegmentationOfType',\r\n          segmentationRepresentationType: 'Labelmap',\r\n        },\r\n      ],\r\n      options: [\r\n        {\r\n          name: 'Radius (mm)',\r\n          id: 'eraser-radius',\r\n          type: 'range',\r\n          min: 0.5,\r\n          max: 99.5,\r\n          step: 0.5,\r\n          value: 25,\r\n          commands: {\r\n            commandName: 'setBrushSize',\r\n            commandOptions: { toolNames: ['CircularEraser', 'SphereEraser'] },\r\n          },\r\n        },\r\n        {\r\n          name: 'Shape',\r\n          type: 'radio',\r\n          id: 'eraser-mode',\r\n          value: 'CircularEraser',\r\n          values: [\r\n            { value: 'CircularEraser', label: 'Circle' },\r\n            { value: 'SphereEraser', label: 'Sphere' },\r\n          ],\r\n          commands: 'setToolActiveToolbar',\r\n        },\r\n      ],\r\n      commands: {\r\n        commandName: 'activateSelectedSegmentationOfType',\r\n        commandOptions: {\r\n          segmentationRepresentationType: 'Labelmap',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'Threshold',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      icon: 'icon-tool-threshold',\r\n      label: 'Threshold Tool',\r\n      evaluate: [\r\n        {\r\n          name: 'evaluate.cornerstone.segmentation',\r\n          toolNames: [\r\n            'ThresholdCircularBrush',\r\n            'ThresholdSphereBrush',\r\n            'ThresholdCircularBrushDynamic',\r\n            'ThresholdSphereBrushDynamic',\r\n          ],\r\n        },\r\n        {\r\n          name: 'evaluate.cornerstone.hasSegmentationOfType',\r\n          segmentationRepresentationType: 'Labelmap',\r\n        },\r\n      ],\r\n      commands: {\r\n        commandName: 'activateSelectedSegmentationOfType',\r\n        commandOptions: {\r\n          segmentationRepresentationType: 'Labelmap',\r\n        },\r\n      },\r\n\r\n      options: [\r\n        {\r\n          name: 'Radius (mm)',\r\n          id: 'threshold-radius',\r\n          type: 'range',\r\n          min: 0.5,\r\n          max: 99.5,\r\n          step: 0.5,\r\n          value: 25,\r\n          commands: {\r\n            commandName: 'setBrushSize',\r\n            commandOptions: {\r\n              toolNames: [\r\n                'ThresholdCircularBrush',\r\n                'ThresholdSphereBrush',\r\n                'ThresholdCircularBrushDynamic',\r\n                'ThresholdSphereBrushDynamic',\r\n              ],\r\n            },\r\n          },\r\n        },\r\n        {\r\n          name: 'Shape',\r\n          type: 'radio',\r\n          id: 'threshold-shape',\r\n          value: 'ThresholdCircularBrush',\r\n          values: [\r\n            { value: 'ThresholdCircularBrush', label: 'Circle' },\r\n            { value: 'ThresholdSphereBrush', label: 'Sphere' },\r\n          ],\r\n          commands: ({ value, commandsManager, options }) => {\r\n            const optionsDynamic = options.find(option => option.id === 'dynamic-mode');\r\n\r\n            if (optionsDynamic.value === 'ThresholdDynamic') {\r\n              commandsManager.run('setToolActive', {\r\n                toolName:\r\n                  value === 'ThresholdCircularBrush'\r\n                    ? 'ThresholdCircularBrushDynamic'\r\n                    : 'ThresholdSphereBrushDynamic',\r\n              });\r\n            } else {\r\n              commandsManager.run('setToolActive', {\r\n                toolName: value,\r\n              });\r\n            }\r\n          },\r\n        },\r\n        {\r\n          name: 'Threshold',\r\n          type: 'radio',\r\n          id: 'dynamic-mode',\r\n          value: 'ThresholdDynamic',\r\n          values: [\r\n            { value: 'ThresholdDynamic', label: 'Dynamic' },\r\n            { value: 'ThresholdRange', label: 'Range' },\r\n          ],\r\n          commands: ({ value, commandsManager, options }) => {\r\n            const thresholdRangeOption = options.find(option => option.id === 'threshold-shape');\r\n\r\n            if (value === 'ThresholdDynamic') {\r\n              commandsManager.run('setToolActiveToolbar', {\r\n                toolName:\r\n                  thresholdRangeOption.value === 'ThresholdCircularBrush'\r\n                    ? 'ThresholdCircularBrushDynamic'\r\n                    : 'ThresholdSphereBrushDynamic',\r\n              });\r\n            } else {\r\n              commandsManager.run('setToolActiveToolbar', {\r\n                toolName: thresholdRangeOption.value,\r\n              });\r\n\r\n              const thresholdRangeValue = options.find(\r\n                option => option.id === 'threshold-range'\r\n              ).value;\r\n\r\n              commandsManager.run('setThresholdRange', {\r\n                toolNames: ['ThresholdCircularBrush', 'ThresholdSphereBrush'],\r\n                value: thresholdRangeValue,\r\n              });\r\n            }\r\n          },\r\n        },\r\n        {\r\n          name: 'ThresholdRange',\r\n          type: 'double-range',\r\n          id: 'threshold-range',\r\n          min: -1000,\r\n          max: 1000,\r\n          step: 1,\r\n          value: [50, 600],\r\n          condition: ({ options }) =>\r\n            options.find(option => option.id === 'dynamic-mode').value === 'ThresholdRange',\r\n          commands: {\r\n            commandName: 'setThresholdRange',\r\n            commandOptions: {\r\n              toolNames: ['ThresholdCircularBrush', 'ThresholdSphereBrush'],\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'Shapes',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      icon: 'icon-tool-shape',\r\n      label: i18n.t('Buttons:Shapes'),\r\n      evaluate: [\r\n        {\r\n          name: 'evaluate.cornerstone.segmentation',\r\n          toolNames: ['CircleScissor', 'SphereScissor', 'RectangleScissor'],\r\n          disabledText: i18n.t('Buttons:Create new segmentation to enable shapes tool.'),\r\n        },\r\n        {\r\n          name: 'evaluate.cornerstone.hasSegmentationOfType',\r\n          segmentationRepresentationType: 'Labelmap',\r\n        },\r\n      ],\r\n      commands: {\r\n        commandName: 'activateSelectedSegmentationOfType',\r\n        commandOptions: {\r\n          segmentationRepresentationType: 'Labelmap',\r\n        },\r\n      },\r\n      options: [\r\n        {\r\n          name: 'Shape',\r\n          type: 'radio',\r\n          value: 'CircleScissor',\r\n          id: 'shape-mode',\r\n          values: [\r\n            { value: 'CircleScissor', label: 'Circle' },\r\n            { value: 'SphereScissor', label: 'Sphere' },\r\n            { value: 'RectangleScissor', label: 'Rectangle' },\r\n          ],\r\n          commands: 'setToolActiveToolbar',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'SimplifyContours',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'actions-simplify',\r\n      label: 'Simplify Contours',\r\n      tooltip: 'Simplify Contours',\r\n      commands: ['toggleActiveSegmentationUtility'],\r\n      evaluate: [\r\n        {\r\n          name: 'cornerstone.isActiveSegmentationUtility',\r\n        },\r\n      ],\r\n      options: 'cornerstone.SimplifyContourOptions',\r\n    },\r\n  },\r\n  {\r\n    id: 'SmoothContours',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'actions-smooth',\r\n      label: 'Smooth Contours',\r\n      tooltip: 'Smooth Contours',\r\n      commands: ['toggleActiveSegmentationUtility'],\r\n      evaluate: [\r\n        {\r\n          name: 'cornerstone.isActiveSegmentationUtility',\r\n        },\r\n      ],\r\n      options: 'cornerstone.SmoothContoursOptions',\r\n    },\r\n  },\r\n  {\r\n    id: 'LogicalContourOperations',\r\n    uiType: 'ohif.toolButton',\r\n    props: {\r\n      icon: 'actions-combine',\r\n      label: 'Combine Contours',\r\n      tooltip: 'Combine Contours',\r\n      commands: ['toggleActiveSegmentationUtility'],\r\n      evaluate: [\r\n        {\r\n          name: 'cornerstone.isActiveSegmentationUtility',\r\n        },\r\n      ],\r\n      options: 'cornerstone.LogicalContourOperationsOptions',\r\n    },\r\n  },\r\n  {\r\n    id: 'LabelMapEditWithContour',\r\n    uiType: 'ohif.toolBoxButton',\r\n    props: {\r\n      icon: 'tool-labelmap-edit-with-contour',\r\n      label: 'Labelmap Edit with Contour Tool',\r\n      tooltip: 'Labelmap Edit with Contour Tool',\r\n      commands: [\r\n        'setToolActiveToolbar',\r\n        {\r\n          commandName: 'activateSelectedSegmentationOfType',\r\n          commandOptions: { segmentationRepresentationType: 'Labelmap' },\r\n        },\r\n      ],\r\n      evaluate: [\r\n        {\r\n          name: 'evaluate.cornerstone.segmentation',\r\n          toolNames: ['LabelMapEditWithContour'],\r\n          disabledText: 'Create new segmentation to enable this tool.',\r\n        },\r\n        {\r\n          name: 'evaluate.cornerstone.hasSegmentationOfType',\r\n          segmentationRepresentationType: 'Labelmap',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n];\r\n\r\nexport default toolbarButtons;\r\n","const colours = {\r\n  'viewport-0': 'rgb(200, 0, 0)',\r\n  'viewport-1': 'rgb(200, 200, 0)',\r\n  'viewport-2': 'rgb(0, 200, 0)',\r\n};\r\n\r\nconst colorsByOrientation = {\r\n  axial: 'rgb(200, 0, 0)',\r\n  sagittal: 'rgb(200, 200, 0)',\r\n  coronal: 'rgb(0, 200, 0)',\r\n};\r\n\r\nfunction createTools({ utilityModule, commandsManager }) {\r\n  const { toolNames, Enums } = utilityModule.exports;\r\n\r\n  const tools = {\r\n    active: [\r\n      { toolName: toolNames.WindowLevel, bindings: [{ mouseButton: Enums.MouseBindings.Primary }] },\r\n      { toolName: toolNames.Pan, bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }] },\r\n      {\r\n        toolName: toolNames.Zoom,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }, { numTouchPoints: 2 }],\r\n      },\r\n      {\r\n        toolName: toolNames.StackScroll,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Wheel }, { numTouchPoints: 3 }],\r\n      },\r\n    ],\r\n    passive: [\r\n      {\r\n        toolName: 'CircularBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'FILL_INSIDE_CIRCLE',\r\n        },\r\n      },\r\n      {\r\n        toolName: toolNames.LabelmapSlicePropagation,\r\n      },\r\n      {\r\n        toolName: toolNames.MarkerLabelmap,\r\n      },\r\n      {\r\n        toolName: toolNames.RegionSegmentPlus,\r\n      },\r\n      {\r\n        toolName: 'CircularEraser',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'ERASE_INSIDE_CIRCLE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'SphereBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'FILL_INSIDE_SPHERE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'SphereEraser',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'ERASE_INSIDE_SPHERE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'ThresholdCircularBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'THRESHOLD_INSIDE_CIRCLE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'ThresholdSphereBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'THRESHOLD_INSIDE_SPHERE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'ThresholdCircularBrushDynamic',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'THRESHOLD_INSIDE_CIRCLE',\r\n          threshold: {\r\n            isDynamic: true,\r\n            dynamicRadius: 3,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        toolName: toolNames.SegmentBidirectional,\r\n      },\r\n      {\r\n        toolName: toolNames.SegmentSelect,\r\n      },\r\n      {\r\n        toolName: 'ThresholdSphereBrushDynamic',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'THRESHOLD_INSIDE_SPHERE',\r\n          threshold: {\r\n            isDynamic: true,\r\n            dynamicRadius: 3,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        toolName: toolNames.LabelMapEditWithContourTool,\r\n      },\r\n      { toolName: toolNames.CircleScissors },\r\n      { toolName: toolNames.RectangleScissors },\r\n      { toolName: toolNames.SphereScissors },\r\n      { toolName: toolNames.StackScroll },\r\n      { toolName: toolNames.Magnify },\r\n      { toolName: toolNames.WindowLevelRegion },\r\n\r\n      { toolName: toolNames.UltrasoundDirectional },\r\n      {\r\n        toolName: toolNames.PlanarFreehandContourSegmentation,\r\n      },\r\n      { toolName: toolNames.LivewireContourSegmentation },\r\n      { toolName: toolNames.SculptorTool },\r\n      { toolName: toolNames.PlanarFreehandROI },\r\n      {\r\n        toolName: 'CatmullRomSplineROI',\r\n        parentTool: toolNames.SplineContourSegmentation,\r\n        configuration: {\r\n          spline: {\r\n            type: 'CATMULLROM',\r\n            enableTwoPointPreview: true,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        toolName: 'LinearSplineROI',\r\n        parentTool: toolNames.SplineContourSegmentation,\r\n        configuration: {\r\n          spline: {\r\n            type: 'LINEAR',\r\n            enableTwoPointPreview: true,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        toolName: 'BSplineROI',\r\n        parentTool: toolNames.SplineContourSegmentation,\r\n        configuration: {\r\n          spline: {\r\n            type: 'BSPLINE',\r\n            enableTwoPointPreview: true,\r\n          },\r\n        },\r\n      },\r\n    ],\r\n    disabled: [{ toolName: toolNames.ReferenceLines }, { toolName: toolNames.AdvancedMagnify }],\r\n  };\r\n\r\n  const updatedTools = commandsManager.run('initializeSegmentLabelTool', { tools });\r\n\r\n  return updatedTools;\r\n}\r\n\r\nfunction initDefaultToolGroup(extensionManager, toolGroupService, commandsManager, toolGroupId) {\r\n  const utilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone.utilityModule.tools'\r\n  );\r\n  const tools = createTools({ commandsManager, utilityModule });\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupId, tools);\r\n}\r\n\r\nfunction initMPRToolGroup(extensionManager, toolGroupService, commandsManager) {\r\n  const utilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone.utilityModule.tools'\r\n  );\r\n  const servicesManager = extensionManager._servicesManager;\r\n  const { cornerstoneViewportService } = servicesManager.services;\r\n  const tools = createTools({ commandsManager, utilityModule });\r\n  tools.disabled.push(\r\n    {\r\n      toolName: utilityModule.exports.toolNames.Crosshairs,\r\n      configuration: {\r\n        viewportIndicators: true,\r\n        viewportIndicatorsConfig: {\r\n          circleRadius: 5,\r\n          xOffset: 0.95,\r\n          yOffset: 0.05,\r\n        },\r\n        disableOnPassive: true,\r\n        autoPan: {\r\n          enabled: false,\r\n          panSize: 10,\r\n        },\r\n        getReferenceLineColor: viewportId => {\r\n          const viewportInfo = cornerstoneViewportService.getViewportInfo(viewportId);\r\n          const viewportOptions = viewportInfo?.viewportOptions;\r\n          if (viewportOptions) {\r\n            return (\r\n              colours[viewportOptions.id] ||\r\n              colorsByOrientation[viewportOptions.orientation] ||\r\n              '#0c0'\r\n            );\r\n          } else {\r\n            console.warn('missing viewport?', viewportId);\r\n            return '#0c0';\r\n          }\r\n        },\r\n      },\r\n    },\r\n    { toolName: utilityModule.exports.toolNames.ReferenceLines }\r\n  );\r\n  toolGroupService.createToolGroupAndAddTools('mpr', tools);\r\n}\r\n\r\nfunction initVolume3DToolGroup(extensionManager, toolGroupService) {\r\n  const utilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone.utilityModule.tools'\r\n  );\r\n\r\n  const { toolNames, Enums } = utilityModule.exports;\r\n\r\n  const tools = {\r\n    active: [\r\n      {\r\n        toolName: toolNames.TrackballRotateTool,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Zoom,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }, { numTouchPoints: 2 }],\r\n      },\r\n      {\r\n        toolName: toolNames.Pan,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\r\n      },\r\n    ],\r\n  };\r\n\r\n  toolGroupService.createToolGroupAndAddTools('volume3d', tools);\r\n}\r\n\r\nfunction initToolGroups(extensionManager, toolGroupService, commandsManager) {\r\n  initDefaultToolGroup(extensionManager, toolGroupService, commandsManager, 'default');\r\n  initMPRToolGroup(extensionManager, toolGroupService, commandsManager);\r\n  initVolume3DToolGroup(extensionManager, toolGroupService);\r\n}\r\n\r\nexport default initToolGroups;\r\n","import { id } from './id';\r\nimport toolbarButtons from './toolbarButtons';\r\nimport initToolGroups from './initToolGroups';\r\nimport setUpAutoTabSwitchHandler from './utils/setUpAutoTabSwitchHandler';\r\n\r\nconst ohif = {\r\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\r\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\r\n  hangingProtocol: '@ohif/extension-default.hangingProtocolModule.default',\r\n  leftPanel: '@ohif/extension-default.panelModule.seriesList',\r\n};\r\n\r\nconst cornerstone = {\r\n  viewport: '@ohif/extension-cornerstone.viewportModule.cornerstone',\r\n  labelMapSegmentationPanel:\r\n    '@ohif/extension-cornerstone.panelModule.panelSegmentationWithToolsLabelMap',\r\n  contourSegmentationPanel:\r\n    '@ohif/extension-cornerstone.panelModule.panelSegmentationWithToolsContour',\r\n  measurements: '@ohif/extension-cornerstone.panelModule.panelMeasurement',\r\n};\r\n\r\nconst segmentation = {\r\n  sopClassHandler: '@ohif/extension-cornerstone-dicom-seg.sopClassHandlerModule.dicom-seg',\r\n  viewport: '@ohif/extension-cornerstone-dicom-seg.viewportModule.dicom-seg',\r\n};\r\n\r\nconst dicomRT = {\r\n  viewport: '@ohif/extension-cornerstone-dicom-rt.viewportModule.dicom-rt',\r\n  sopClassHandler: '@ohif/extension-cornerstone-dicom-rt.sopClassHandlerModule.dicom-rt',\r\n};\r\n/**\r\n * Just two dependencies to be able to render a viewport with panels in order\r\n * to make sure that the mode is working.\r\n */\r\nconst extensionDependencies = {\r\n  '@ohif/extension-default': '^3.0.0',\r\n  '@ohif/extension-cornerstone': '^3.0.0',\r\n  '@ohif/extension-cornerstone-dicom-seg': '^3.0.0',\r\n  '@ohif/extension-cornerstone-dicom-rt': '^3.0.0',\r\n};\r\n\r\nfunction modeFactory({ modeConfiguration }) {\r\n  const _unsubscriptions = [];\r\n  return {\r\n    /**\r\n     * Mode ID, which should be unique among modes used by the viewer. This ID\r\n     * is used to identify the mode in the viewer's state.\r\n     */\r\n    id,\r\n    routeName: 'segmentation',\r\n    /**\r\n     * Mode name, which is displayed in the viewer's UI in the workList, for the\r\n     * user to select the mode.\r\n     */\r\n    displayName: 'Segmentation',\r\n    /**\r\n     * Runs when the Mode Route is mounted to the DOM. Usually used to initialize\r\n     * Services and other resources.\r\n     */\r\n    onModeEnter: ({ servicesManager, extensionManager, commandsManager }: withAppTypes) => {\r\n      const {\r\n        measurementService,\r\n        toolbarService,\r\n        toolGroupService,\r\n        segmentationService,\r\n        viewportGridService,\r\n        panelService,\r\n      } = servicesManager.services;\r\n\r\n      measurementService.clearMeasurements();\r\n\r\n      // Init Default and SR ToolGroups\r\n      initToolGroups(extensionManager, toolGroupService, commandsManager);\r\n\r\n      toolbarService.register(toolbarButtons);\r\n\r\n      toolbarService.updateSection(toolbarService.sections.primary, [\r\n        'WindowLevel',\r\n        'Pan',\r\n        'Zoom',\r\n        'TrackballRotate',\r\n        'Capture',\r\n        'Layout',\r\n        'Crosshairs',\r\n        'MoreTools',\r\n      ]);\r\n\r\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.topLeft, [\r\n        'orientationMenu',\r\n        'dataOverlayMenu',\r\n      ]);\r\n\r\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.bottomMiddle, [\r\n        'AdvancedRenderingControls',\r\n      ]);\r\n\r\n      toolbarService.updateSection('AdvancedRenderingControls', [\r\n        'windowLevelMenuEmbedded',\r\n        'voiManualControlMenu',\r\n        'Colorbar',\r\n        'opacityMenu',\r\n        'thresholdMenu',\r\n      ]);\r\n\r\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.topRight, [\r\n        'modalityLoadBadge',\r\n        'trackingStatus',\r\n        'navigationComponent',\r\n      ]);\r\n\r\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.bottomLeft, [\r\n        'windowLevelMenu',\r\n      ]);\r\n\r\n      toolbarService.updateSection('MoreTools', [\r\n        'Reset',\r\n        'rotate-right',\r\n        'flipHorizontal',\r\n        'ReferenceLines',\r\n        'ImageOverlayViewer',\r\n        'StackScroll',\r\n        'invert',\r\n        'Cine',\r\n        'Magnify',\r\n        'TagBrowser',\r\n      ]);\r\n\r\n      toolbarService.updateSection(toolbarService.sections.labelMapSegmentationToolbox, [\r\n        'LabelMapTools',\r\n      ]);\r\n      toolbarService.updateSection(toolbarService.sections.contourSegmentationToolbox, [\r\n        'ContourTools',\r\n      ]);\r\n\r\n      toolbarService.updateSection('LabelMapTools', [\r\n        'LabelmapSlicePropagation',\r\n        'BrushTools',\r\n        'MarkerLabelmap',\r\n        'RegionSegmentPlus',\r\n        'Shapes',\r\n        'LabelMapEditWithContour',\r\n      ]);\r\n      toolbarService.updateSection('ContourTools', [\r\n        'PlanarFreehandContourSegmentationTool',\r\n        'SculptorTool',\r\n        'SplineContourSegmentationTool',\r\n        'LivewireContourSegmentationTool',\r\n      ]);\r\n\r\n      toolbarService.updateSection(toolbarService.sections.labelMapSegmentationUtilities, [\r\n        'LabelMapUtilities',\r\n      ]);\r\n      toolbarService.updateSection(toolbarService.sections.contourSegmentationUtilities, [\r\n        'ContourUtilities',\r\n      ]);\r\n\r\n      toolbarService.updateSection('LabelMapUtilities', [\r\n        'InterpolateLabelmap',\r\n        'SegmentBidirectional',\r\n      ]);\r\n      toolbarService.updateSection('ContourUtilities', [\r\n        'LogicalContourOperations',\r\n        'SimplifyContours',\r\n        'SmoothContours',\r\n      ]);\r\n\r\n      toolbarService.updateSection('BrushTools', ['Brush', 'Eraser', 'Threshold']);\r\n\r\n      const { unsubscribeAutoTabSwitchEvents } = setUpAutoTabSwitchHandler({\r\n        segmentationService,\r\n        viewportGridService,\r\n        panelService,\r\n      });\r\n\r\n      _unsubscriptions.push(...unsubscribeAutoTabSwitchEvents);\r\n    },\r\n    onModeExit: ({ servicesManager }: withAppTypes) => {\r\n      const {\r\n        toolGroupService,\r\n        syncGroupService,\r\n        segmentationService,\r\n        cornerstoneViewportService,\r\n        uiDialogService,\r\n        uiModalService,\r\n      } = servicesManager.services;\r\n\r\n      _unsubscriptions.forEach(unsubscribe => unsubscribe());\r\n      _unsubscriptions.length = 0;\r\n\r\n      uiDialogService.hideAll();\r\n      uiModalService.hide();\r\n      toolGroupService.destroy();\r\n      syncGroupService.destroy();\r\n      segmentationService.destroy();\r\n      cornerstoneViewportService.destroy();\r\n    },\r\n    /** */\r\n    validationTags: {\r\n      study: [],\r\n      series: [],\r\n    },\r\n    /**\r\n     * A boolean return value that indicates whether the mode is valid for the\r\n     * modalities of the selected studies. Currently we don't have stack viewport\r\n     * segmentations and we should exclude them\r\n     */\r\n    isValidMode: ({ modalities }) => {\r\n      // Don't show the mode if the selected studies have only one modality\r\n      // that is not supported by the mode\r\n      const modalitiesArray = modalities.split('\\\\');\r\n      return {\r\n        valid:\r\n          modalitiesArray.length === 1\r\n            ? !['SM', 'ECG', 'OT', 'DOC'].includes(modalitiesArray[0])\r\n            : true,\r\n        description:\r\n          'The mode does not support studies that ONLY include the following modalities: SM, OT, DOC',\r\n      };\r\n    },\r\n    /**\r\n     * Mode Routes are used to define the mode's behavior. A list of Mode Route\r\n     * that includes the mode's path and the layout to be used. The layout will\r\n     * include the components that are used in the layout. For instance, if the\r\n     * default layoutTemplate is used (id: '@ohif/extension-default.layoutTemplateModule.viewerLayout')\r\n     * it will include the leftPanels, rightPanels, and viewports. However, if\r\n     * you define another layoutTemplate that includes a Footer for instance,\r\n     * you should provide the Footer component here too. Note: We use Strings\r\n     * to reference the component's ID as they are registered in the internal\r\n     * ExtensionManager. The template for the string is:\r\n     * `${extensionId}.{moduleType}.${componentId}`.\r\n     */\r\n    routes: [\r\n      {\r\n        path: 'template',\r\n        layoutTemplate: ({ location, servicesManager }) => {\r\n          return {\r\n            id: ohif.layout,\r\n            props: {\r\n              leftPanels: [ohif.leftPanel],\r\n              leftPanelResizable: true,\r\n              rightPanels: [\r\n                cornerstone.contourSegmentationPanel,\r\n                cornerstone.labelMapSegmentationPanel,\r\n              ],\r\n              rightPanelResizable: true,\r\n              // leftPanelClosed: true,\r\n              viewports: [\r\n                {\r\n                  namespace: cornerstone.viewport,\r\n                  displaySetsToDisplay: [ohif.sopClassHandler],\r\n                },\r\n                {\r\n                  namespace: segmentation.viewport,\r\n                  displaySetsToDisplay: [segmentation.sopClassHandler],\r\n                },\r\n                {\r\n                  namespace: dicomRT.viewport,\r\n                  displaySetsToDisplay: [dicomRT.sopClassHandler],\r\n                },\r\n              ],\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ],\r\n    /** List of extensions that are used by the mode */\r\n    extensions: extensionDependencies,\r\n    /** HangingProtocol used by the mode */\r\n    // Commented out to just use the most applicable registered hanging protocol\r\n    // The example is used for a grid layout to specify that as a preferred layout\r\n    hangingProtocol: ['@ohif/mnGrid'],\r\n    /** SopClassHandlers used by the mode */\r\n    sopClassHandlers: [ohif.sopClassHandler, segmentation.sopClassHandler, dicomRT.sopClassHandler],\r\n  };\r\n}\r\n\r\nconst mode = {\r\n  id,\r\n  modeFactory,\r\n  extensionDependencies,\r\n};\r\n\r\nexport default mode;\r\n","/**\r\n * Sets up auto tab switching for when the first segmentation is added into the viewer.\r\n */\r\nexport default function setUpAutoTabSwitchHandler({\r\n  segmentationService,\r\n  viewportGridService,\r\n  panelService,\r\n}) {\r\n  const autoTabSwitchEvents = [\r\n    segmentationService.EVENTS.SEGMENTATION_MODIFIED,\r\n    segmentationService.EVENTS.SEGMENTATION_REPRESENTATION_MODIFIED,\r\n  ];\r\n\r\n  // Initially there are no segmentations, so we should switch the tab whenever the first segmentation is added.\r\n  let shouldSwitchTab = true;\r\n\r\n  const unsubscribeAutoTabSwitchEvents = autoTabSwitchEvents\r\n    .map(eventName =>\r\n      segmentationService.subscribe(eventName, () => {\r\n        const segmentations = segmentationService.getSegmentations();\r\n\r\n        if (!segmentations.length) {\r\n          // If all the segmentations are removed, then the next time a segmentation is added, we should switch the tab.\r\n          shouldSwitchTab = true;\r\n          return;\r\n        }\r\n\r\n        const activeViewportId = viewportGridService.getActiveViewportId();\r\n        const activeRepresentation = segmentationService\r\n          .getSegmentationRepresentations(activeViewportId)\r\n          ?.find(representation => representation.active);\r\n\r\n        if (activeRepresentation && shouldSwitchTab) {\r\n          shouldSwitchTab = false;\r\n\r\n          switch (activeRepresentation.type) {\r\n            case 'Labelmap':\r\n              panelService.activatePanel(\r\n                '@ohif/extension-cornerstone.panelModule.panelSegmentationWithToolsLabelMap',\r\n                true\r\n              );\r\n              break;\r\n            case 'Contour':\r\n              panelService.activatePanel(\r\n                '@ohif/extension-cornerstone.panelModule.panelSegmentationWithToolsContour',\r\n                true\r\n              );\r\n              break;\r\n          }\r\n        }\r\n      })\r\n    )\r\n    .map(subscription => subscription.unsubscribe);\r\n\r\n  return { unsubscribeAutoTabSwitchEvents };\r\n}\r\n"],"names":["id","packageJson","setToolActiveToolbar","commandName","commandOptions","toolGroupIds","callbacks","toolName","uiType","props","buttonSection","icon","label","i18n","t","tooltip","evaluate","name","hideWhenDisabled","type","commands","disabledText","unsupportedViewportTypes","rows","columns","toolNames","segmentationRepresentationType","bindings","mouseButton","modifierKey","options","value","values","min","max","step","listeners","ViewportGridService","EVENTS","ACTIVE_VIEWPORT_ID_CHANGED","VIEWPORTS_READY","commandsManager","find","option","run","thresholdRangeOption","thresholdRangeValue","condition","colours","colorsByOrientation","axial","sagittal","coronal","createTools","utilityModule","Enums","exports","tools","active","WindowLevel","MouseBindings","Primary","Pan","Auxiliary","Zoom","Secondary","numTouchPoints","StackScroll","Wheel","passive","parentTool","configuration","activeStrategy","LabelmapSlicePropagation","MarkerLabelmap","RegionSegmentPlus","threshold","isDynamic","dynamicRadius","SegmentBidirectional","SegmentSelect","LabelMapEditWithContourTool","CircleScissors","RectangleScissors","SphereScissors","Magnify","WindowLevelRegion","UltrasoundDirectional","PlanarFreehandContourSegmentation","LivewireContourSegmentation","SculptorTool","PlanarFreehandROI","SplineContourSegmentation","spline","enableTwoPointPreview","disabled","ReferenceLines","AdvancedMagnify","extensionManager","toolGroupService","toolGroupId","getModuleEntry","createToolGroupAndAddTools","initDefaultToolGroup","servicesManager","_servicesManager","cornerstoneViewportService","services","push","Crosshairs","viewportIndicators","viewportIndicatorsConfig","circleRadius","xOffset","yOffset","disableOnPassive","autoPan","enabled","panSize","getReferenceLineColor","viewportId","viewportInfo","getViewportInfo","viewportOptions","orientation","console","warn","initMPRToolGroup","TrackballRotateTool","initVolume3DToolGroup","ohif","cornerstone","segmentation","dicomRT","extensionDependencies","modeFactory","modeConfiguration","_unsubscriptions","routeName","displayName","onModeEnter","measurementService","toolbarService","segmentationService","viewportGridService","panelService","clearMeasurements","initToolGroups","register","toolbarButtons","updateSection","sections","primary","viewportActionMenu","topLeft","bottomMiddle","topRight","bottomLeft","labelMapSegmentationToolbox","contourSegmentationToolbox","labelMapSegmentationUtilities","contourSegmentationUtilities","unsubscribeAutoTabSwitchEvents","autoTabSwitchEvents","SEGMENTATION_MODIFIED","SEGMENTATION_REPRESENTATION_MODIFIED","shouldSwitchTab","map","eventName","subscribe","getSegmentations","length","activeViewportId","getActiveViewportId","activeRepresentation","getSegmentationRepresentations","representation","activatePanel","subscription","unsubscribe","setUpAutoTabSwitchHandler","onModeExit","syncGroupService","uiDialogService","uiModalService","forEach","hideAll","hide","destroy","validationTags","study","series","isValidMode","modalities","modalitiesArray","split","valid","includes","description","routes","path","layoutTemplate","location","leftPanels","leftPanelResizable","rightPanels","rightPanelResizable","viewports","namespace","displaySetsToDisplay","extensions","hangingProtocol","sopClassHandlers"],"sourceRoot":""}